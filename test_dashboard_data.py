#!/usr/bin/env python3
import pandas as pd
from sqlalchemy import create_engine
from dotenv import load_dotenv
import os

load_dotenv()

DB_URL = os.getenv("DATABASE_URL", "")
engine = create_engine(DB_URL, pool_pre_ping=True)

def safe_query(query, default_df=None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫"""
    try:
        df = pd.read_sql(query, engine)
        return df
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return default_df if default_df is not None else pd.DataFrame()

def test_data_loading():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö...")
    
    # –¢–µ—Å—Ç 1: –ò–ø–æ—Ç–µ—á–Ω—ã–µ —Å—Ç–∞–≤–∫–∏
    print("\n1. –¢–µ—Å—Ç –∏–ø–æ—Ç–µ—á–Ω—ã—Ö —Å—Ç–∞–≤–æ–∫:")
    query = """
    SELECT date, mortgage_rate 
    FROM vw_pbi_mortgage_rates 
    WHERE date >= '2020-01-01' AND mortgage_rate IS NOT NULL
    ORDER BY date
    LIMIT 5
    """
    df = safe_query(query)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(df)} –∑–∞–ø–∏—Å–µ–π")
    if not df.empty:
        print(f"   –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {df.head().to_dict('records')}")
    
    # –¢–µ—Å—Ç 2: CPI
    print("\n2. –¢–µ—Å—Ç CPI:")
    query = """
    SELECT date, cpi 
    FROM vw_pbi_cpi 
    WHERE date >= '2020-01-01' AND cpi IS NOT NULL
    ORDER BY date
    LIMIT 5
    """
    df = safe_query(query)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(df)} –∑–∞–ø–∏—Å–µ–π")
    if not df.empty:
        print(f"   –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {df.head().to_dict('records')}")
    
    # –¢–µ—Å—Ç 3: –ë–µ–∑—Ä–∞–±–æ—Ç–∏—Ü–∞
    print("\n3. –¢–µ—Å—Ç –±–µ–∑—Ä–∞–±–æ—Ç–∏—Ü—ã:")
    query = """
    SELECT date, unemployment_rate 
    FROM vw_pbi_unemployment 
    WHERE date >= '2020-01-01' AND unemployment_rate IS NOT NULL
    ORDER BY date
    LIMIT 5
    """
    df = safe_query(query)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(df)} –∑–∞–ø–∏—Å–µ–π")
    if not df.empty:
        print(f"   –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {df.head().to_dict('records')}")
    
    # –¢–µ—Å—Ç 4: ACS
    print("\n4. –¢–µ—Å—Ç ACS:")
    query = """
    SELECT year, median_gross_rent_usd, median_home_value_usd
    FROM vw_pbi_acs_rent_value 
    WHERE median_gross_rent_usd IS NOT NULL OR median_home_value_usd IS NOT NULL
    ORDER BY year
    LIMIT 5
    """
    df = safe_query(query)
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {len(df)} –∑–∞–ø–∏—Å–µ–π")
    if not df.empty:
        print(f"   –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö: {df.head().to_dict('records')}")

if __name__ == "__main__":
    test_data_loading()
